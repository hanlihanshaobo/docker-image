# This is a basic workflow to help you get started with Actions
name: build docker-ocr_api_server image
# Controls when the action will run.
on:
  #push:
   # branches:
  #    - main
  # Allows you to run this workflow manually from the Actions tab
  # 可以手动触发
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Test scenario tags"

jobs:
  buildx:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y-%m-%d_%H-%M')"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Clone source code
     #   working-directory: /workdir
        run: |
          df -hT $PWD
          git clone https://github.com/OpenListTeam/ocr_api_server.git docker
          cd docker
          # npm install -g pnpm
          # pnpm i
          # pnpm build
      #    sed -i '10 i RUN npm install -g npm@10.7.0' docker/build/Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          file: ./docker/Dockerfile
          # 所需要的体系结构，可以在 Available platforms 步骤中获取所有的可用架构
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          # 镜像推送时间
          push: ${{ github.event_name != 'pull_request' }}
          # 给清单打上多个标签
          tags: |
            hanshaobo/ocr_api_server:${{ steps.date.outputs.today }}
            hanshaobo/ocr_api_server:latest
