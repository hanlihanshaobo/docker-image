# This is a basic workflow to help you get started with Actions
name: build docker-ocr_api_server image

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Test scenario tags"

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y-%m-%d_%H-%M')"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Clone source code
        run: |
          df -hT $PWD
          git clone https://github.com/OpenListTeam/ocr_api_server.git docker
          cd docker

      - name: Modify Dockerfile
        run: |
          cd docker
          # 备份原始 Dockerfile
          cp Dockerfile Dockerfile.bak
          # 替换 apt-get 源为阿里云，并优化命令
          sed -i 's|apt-get --allow-releaseinfo-change update|echo "deb http://mirrors.aliyun.com/debian buster main" > /etc/apt/sources.list \&\& apt-get update|g' Dockerfile
          # 分离 apt-get install 命令并清理缓存
          sed -i 's|apt install libgl1-mesa-glx libglib2.0-0 -y|apt-get install -y --no-install-recommends libgl1-mesa-glx libglib2.0-0 \&\& apt-get clean \&\& rm -rf /var/lib/apt/lists/*|g' Dockerfile
          # 可选：分离 pip install 命令以便调试
          sed -i 's|pip3 install --no-cache-dir -r requirements.txt|pip3 install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt|g' Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            hanshaobo/ocr_api_server:${{ steps.date.outputs.today }}
            hanshaobo/ocr_api_server:latest
